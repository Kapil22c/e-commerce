[{"D:\\ReactJS\\e-commerce\\src\\index.js":"1","D:\\ReactJS\\e-commerce\\src\\App.js":"2","D:\\ReactJS\\e-commerce\\src\\components\\Products\\Products.jsx":"3","D:\\ReactJS\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"4","D:\\ReactJS\\e-commerce\\src\\components\\Products\\Product\\styles.js":"5","D:\\ReactJS\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\ReactJS\\e-commerce\\src\\components\\Navbar\\styles.js":"7","D:\\ReactJS\\e-commerce\\src\\components\\index.js":"8","D:\\ReactJS\\e-commerce\\src\\components\\Products\\styles.js":"9","D:\\ReactJS\\e-commerce\\src\\lib\\commerce.js":"10","D:\\ReactJS\\e-commerce\\src\\components\\Cart\\Cart.jsx":"11","D:\\ReactJS\\e-commerce\\src\\components\\Cart\\styles.js":"12","D:\\ReactJS\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","D:\\ReactJS\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js":"14","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\FormInput.jsx":"19","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":150,"mtime":1606839975154,"results":"21","hashOfConfig":"22"},{"size":3133,"mtime":1608791288322,"results":"23","hashOfConfig":"22"},{"size":1239,"mtime":1608540897640,"results":"24","hashOfConfig":"22"},{"size":1332,"mtime":1608541064474,"results":"25","hashOfConfig":"22"},{"size":405,"mtime":1607682157882,"results":"26","hashOfConfig":"22"},{"size":1447,"mtime":1608626196155,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1607686033484,"results":"28","hashOfConfig":"22"},{"size":233,"mtime":1608633981226,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1607686954454,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1607762714324,"results":"31","hashOfConfig":"22"},{"size":1963,"mtime":1608632945710,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1608545452077,"results":"33","hashOfConfig":"22"},{"size":1325,"mtime":1608632618481,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1608546696491,"results":"35","hashOfConfig":"22"},{"size":3981,"mtime":1608794226424,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1608633543222,"results":"37","hashOfConfig":"22"},{"size":5531,"mtime":1608794815078,"results":"38","hashOfConfig":"22"},{"size":3019,"mtime":1608794682691,"results":"39","hashOfConfig":"22"},{"size":559,"mtime":1608792523451,"results":"40","hashOfConfig":"22"},{"size":1133,"mtime":1608788822919,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"h0pxtn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\ReactJS\\e-commerce\\src\\index.js",[],["86","87"],"D:\\ReactJS\\e-commerce\\src\\App.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\Products\\Products.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\Products\\Product\\styles.js",[],["88","89"],"D:\\ReactJS\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\Navbar\\styles.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\index.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\Products\\styles.js",[],"D:\\ReactJS\\e-commerce\\src\\lib\\commerce.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\Cart\\Cart.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\Cart\\styles.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["90"],"import React, { useState, useEffect } from 'react';\r\nimport {Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\nimport { commerce } from '../../../lib/commerce';\r\n\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, {type : 'cart'});\r\n                // console.log(token);\r\n                setCheckoutToken(token);\r\n            } catch (error) {\r\n                // console.log(error);\r\n                history.pushState('/')\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000);\r\n    }\r\n\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\r\n                <Divider className={classes.divider}/>\r\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n            </div>\r\n            <br />\r\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\r\n        </>\r\n    ): isFinished ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Thank you for your purchase</Typography>\r\n                <Divider className={classes.divider}/>\r\n            </div>\r\n            <br />\r\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\r\n        </>\r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n\r\n    if(error){\r\n        <>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br />\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\r\n\r\n        </>\r\n    }\r\n\r\n    const Form = () => activeStep === 0 \r\n        ? <AddressForm checkoutToken={checkoutToken} next={next}/>\r\n    : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout}/>\r\n\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["91","92"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { commerce } from '../../lib/commerce';\r\n\r\nimport FormInput from './FormInput';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label:name }));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label:name }));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}));\r\n    // console.log(countries);\r\n    const methods = useForm();\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        \r\n        // console.log(countries);\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[2]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region});\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shopping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption}))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstname' label='First Name' />\r\n                        <FormInput name='lastname' label='Last Name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zip' label='ZIP / Postal code' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                <MenuItem key={country.id} value={country.id}>\r\n                                    {country.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                    {subdivision.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e)=> setShippingOption(e.target.value)}>\r\n                            {options.map((option) => (\r\n                                <MenuItem key={option.id} value={option.id}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                            <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm;\r\n","D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\FormInput.jsx",[],"D:\\ReactJS\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":33,"column":8,"nodeType":"101","endLine":33,"endColumn":14,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":48,"column":8,"nodeType":"101","endLine":48,"endColumn":10,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":56,"column":8,"nodeType":"101","endLine":56,"endColumn":29,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [cart, history]",{"range":"118","text":"119"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"122","text":"123"},[1276,1282],"[cart, history]",[2179,2181],"[checkoutToken.id]",[2448,2469],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]